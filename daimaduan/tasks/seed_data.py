import json
from operator import itemgetter

from fabric.decorators import task

from daimaduan.models.syntax import Syntax


DIST_FILE = 'daimaduan/static/js/lexers.js'

ALL_SUPPORTED_SYNTAX = (
    # ('brainfuck', 'brainfuck', 'Brainfuck'),
    # ('cirru', 'cirru', 'Cirru'),
    # ('nimrod', 'nimrod', 'Nimrod'),
    ('bash', 'bash', 'Bash'),
    # ('golo', 'golo', 'Golo'),
    # ('css+django', 'css+django', 'CSS+Django/Jinja'),
    # ('cfm', 'cfm', 'Coldfusion HTML'),
    # ('lagda', 'lagda', 'Literate Agda'),
    # ('xtend', 'xtend', 'Xtend'),
    # ('powershell', 'powershell', 'PowerShell'),
    # ('limbo', 'limbo', 'Limbo'),
    # ('jags', 'jags', 'JAGS'),
    # ('kal', 'kal', 'Kal'),
    # ('dylan-console', 'dylan-console', 'Dylan session'),
    ('java', 'java', 'Java'),
    # ('nemerle', 'nemerle', 'Nemerle'),
    # ('css+erb', 'css+erb', 'CSS+Ruby'),
    # ('mysql', 'mysql', 'MySQL'),
    ('cpp', 'cpp', 'C++'),
    # ('cbmbas', 'cbmbas', 'CBM BASIC V2'),
    # ('xml+smarty', 'xml+smarty', 'XML+Smarty'),
    # ('ahk', 'ahk', 'autohotkey'),
    # ('openedge', 'openedge', 'OpenEdge ABL'),
    # ('cmake', 'cmake', 'CMake'),
    # ('sp', 'sp', 'SourcePawn'),
    # ('mako', 'mako', 'Mako'),
    # ('css+mozpreproc', 'css+mozpreproc', 'CSS+mozpreproc'),
    # ('js+myghty', 'js+myghty', 'JavaScript+Myghty'),
    # ('rsl', 'rsl', 'RSL'),
    # ('scaml', 'scaml', 'Scaml'),
    # ('maql', 'maql', 'MAQL'),
    # ('as', 'as', 'ActionScript'),
    # ('squidconf', 'squidconf', 'SquidConf'),
    # ('fan', 'fan', 'Fantom'),
    # ('bbcode', 'bbcode', 'BBCode'),
    # ('css+myghty', 'css+myghty', 'CSS+Myghty'),
    # ('mupad', 'mupad', 'MuPAD'),
    # ('xml+erb', 'xml+erb', 'XML+Ruby'),
    # ('kconfig', 'kconfig', 'Kconfig'),
    # ('pytb', 'pytb', 'Python Traceback'),
    # ('cfs', 'cfs', 'cfstatement'),
    # ('ada', 'ada', 'Ada'),
    # ('xul+mozpreproc', 'xul+mozpreproc', 'XUL+mozpreproc'),
    # ('css+mako', 'css+mako', 'CSS+Mako'),
    # ('cucumber', 'cucumber', 'Gherkin'),
    # ('io', 'io', 'Io'),
    # ('urbiscript', 'urbiscript', 'UrbiScript'),
    # ('plpgsql', 'plpgsql', 'PL/pgSQL'),
    # ('inform6', 'inform6', 'Inform 6'),
    # ('mozpercentpreproc', 'mozpercentpreproc', 'mozpercentpreproc'),
    # ('bro', 'bro', 'Bro'),
    # ('antlr-objc', 'antlr-objc', 'ANTLR With ObjectiveC Target'),
    ('xml', 'xml', 'XML'),
    # ('nit', 'nit', 'Nit'),
    # ('genshitext', 'genshitext', 'Genshi Text'),
    # ('pike', 'pike', 'Pike'),
    # ('objective-j', 'objective-j', 'Objective-J'),
    # ('pycon', 'pycon', 'Python console session'),
    # ('ragel-c', 'ragel-c', 'Ragel in C Host'),
    # ('idl', 'idl', 'IDL'),
    # ('aspx-cs', 'aspx-cs', 'aspx-cs'),
    # ('ragel-ruby', 'ragel-ruby', 'Ragel in Ruby Host'),
    # ('html+genshi', 'html+genshi', 'HTML+Genshi'),
    ('spec', 'spec', 'RPMSpec'),
    # ('css+smarty', 'css+smarty', 'CSS+Smarty'),
    # ('antlr-csharp', 'antlr-csharp', 'ANTLR With C# Target'),
    # ('llvm', 'llvm', 'LLVM'),
    # ('py3tb', 'py3tb', 'Python 3.0 Traceback'),
    # ('ts', 'ts', 'TypeScript'),
    # ('minid', 'minid', 'MiniD'),
    ('sql', 'sql', 'SQL'),
    ('json', 'json', 'JSON'),
    # ('nasm', 'nasm', 'NASM'),
    # ('idris', 'idris', 'Idris'),
    # ('autoit', 'autoit', 'AutoIt'),
    ('sass', 'sass', 'Sass'),
    # ('aspx-vb', 'aspx-vb', 'aspx-vb'),
    # ('ceylon', 'ceylon', 'Ceylon'),
    # ('html+evoque', 'html+evoque', 'HTML+Evoque'),
    # ('numpy', 'numpy', 'NumPy'),
    ('coffee-script', 'coffee-script', 'CoffeeScript'),
    # ('xml+mako', 'xml+mako', 'XML+Mako'),
    # ('css+php', 'css+php', 'CSS+PHP'),
    ('vim', 'vim', 'VimL'),
    # ('css+genshitext', 'css+genshitext', 'CSS+Genshi Text'),
    # ('fancy', 'fancy', 'Fancy'),
    # ('ragel', 'ragel', 'Ragel'),
    # ('ssp', 'ssp', 'Scalate Server Page'),
    # ('at', 'at', 'AmbientTalk'),
    # ('xml+evoque', 'xml+evoque', 'XML+Evoque'),
    # ('redcode', 'redcode', 'Redcode'),
    # ('robotframework', 'robotframework', 'RobotFramework'),
    ('scala', 'scala', 'Scala'),
    # ('lighty', 'lighty', 'Lighttpd configuration file'),
    # ('rql', 'rql', 'RQL'),
    # ('chapel', 'chapel', 'Chapel'),
    # ('html+velocity', 'html+velocity', 'HTML+Velocity'),
    # ('rbcon', 'rbcon', 'Ruby irb session'),
    ('css', 'css', 'CSS'),
    # ('ragel-d', 'ragel-d', 'Ragel in D Host'),
    # ('asy', 'asy', 'Asymptote'),
    # ('xml+php', 'xml+php', 'XML+PHP'),
    # ('gnuplot', 'gnuplot', 'Gnuplot'),
    # ('pot', 'pot', 'Gettext Catalog'),
    # ('matlab', 'matlab', 'Matlab'),
    ('c', 'c', 'C'),
    # ('eiffel', 'eiffel', 'Eiffel'),
    # ('genshi', 'genshi', 'Genshi'),
    # ('vgl', 'vgl', 'VGL'),
    # ('velocity', 'velocity', 'Velocity'),
    # ('koka', 'koka', 'Koka'),
    # ('alloy', 'alloy', 'Alloy'),
    # ('irc', 'irc', 'IRC logs'),
    # ('swig', 'swig', 'SWIG'),
    # ('prolog', 'prolog', 'Prolog'),
    # ('xml+lasso', 'xml+lasso', 'XML+Lasso'),
    # ('smalltalk', 'smalltalk', 'Smalltalk'),
    ('yaml', 'yaml', 'YAML'),
    # ('antlr-as', 'antlr-as', 'ANTLR With ActionScript Target'),
    # ('cypher', 'cypher', 'Cypher'),
    # ('xslt', 'xslt', 'XSLT'),
    # ('splus', 'splus', 'S'),
    # ('dylan-lid', 'dylan-lid', 'DylanLID'),
    # ('ec', 'ec', 'eC'),
    # ('perl6', 'perl6', 'Perl6'),
    # ('logos', 'logos', 'Logos'),
    # ('racket', 'racket', 'Racket'),
    ('text', 'text', 'Text only'),
    ('dart', 'dart', 'Dart'),
    # ('ragel-cpp', 'ragel-cpp', 'Ragel in CPP Host'),
    # ('scilab', 'scilab', 'Scilab'),
    # ('jsp', 'jsp', 'Java Server Page'),
    # ('abap', 'abap', 'ABAP'),
    # ('rust', 'rust', 'Rust'),
    ('diff', 'diff', 'Diff'),
    # ('liquid', 'liquid', 'liquid'),
    # ('matlabsession', 'matlabsession', 'Matlab session'),
    # ('slim', 'slim', 'Slim'),
    # ('html+php', 'html+php', 'HTML+PHP'),
    # ('objective-c++', 'objective-c++', 'Objective-C++'),
    # ('postscript', 'postscript', 'PostScript'),
    # ('verilog', 'verilog', 'verilog'),
    # ('js+erb', 'js+erb', 'JavaScript+Ruby'),
    # ('cobolfree', 'cobolfree', 'COBOLFree'),
    # ('basemake', 'basemake', 'Base Makefile'),
    # ('ioke', 'ioke', 'Ioke'),
    # ('pypylog', 'pypylog', 'PyPy Log'),
    # ('python3', 'python3', 'Python 3'),
    ('swift', 'swift', 'Swift'),
    # ('antlr', 'antlr', 'ANTLR'),
    # ('psql', 'psql', 'PostgreSQL console (psql)'),
    # ('js+django', 'js+django', 'JavaScript+Django/Jinja'),
    # ('lsl', 'lsl', 'LSL'),
    # ('mathematica', 'mathematica', 'Mathematica'),
    # ('erl', 'erl', 'Erlang erl session'),
    # ('modelica', 'modelica', 'Modelica'),
    # ('antlr-python', 'antlr-python', 'ANTLR With Python Target'),
    # ('treetop', 'treetop', 'Treetop'),
    # ('tcl', 'tcl', 'Tcl'),
    # ('fsharp', 'fsharp', 'FSharp'),
    # ('newlisp', 'newlisp', 'NewLisp'),
    # ('css+lasso', 'css+lasso', 'CSS+Lasso'),
    # ('todotxt', 'todotxt', 'Todotxt'),
    # ('shell-session', 'shell-session', 'Shell Session'),
    # ('newspeak', 'newspeak', 'Newspeak'),
    # ('console', 'console', 'Bash Session'),
    # ('gst', 'gst', 'Gosu Template'),
    # ('tads3', 'tads3', 'TADS 3'),
    # ('rd', 'rd', 'Rd'),
    # ('resource', 'resource', 'ResourceBundle'),
    ('js', 'js', 'JavaScript'),
    # ('common-lisp', 'common-lisp', 'Common Lisp'),
    # ('apl', 'apl', 'APL'),
    # ('gap', 'gap', 'GAP'),
    # ('factor', 'factor', 'Factor'),
    # ('awk', 'awk', 'Awk'),
    # ('systemverilog', 'systemverilog', 'systemverilog'),
    # ('js+mako', 'js+mako', 'JavaScript+Mako'),
    # ('iex', 'iex', 'Elixir iex session'),
    # ('html+cheetah', 'html+cheetah', 'HTML+Cheetah'),
    # ('i6t', 'i6t', 'Inform 6 template'),
    # ('julia', 'julia', 'Julia'),
    # ('smarty', 'smarty', 'Smarty'),
    # ('protobuf', 'protobuf', 'Protocol Buffer'),
    # ('tea', 'tea', 'Tea'),
    # ('jasmin', 'jasmin', 'Jasmin'),
    # ('apacheconf', 'apacheconf', 'ApacheConf'),
    # ('js+genshitext', 'js+genshitext', 'JavaScript+Genshi Text'),
    # ('scheme', 'scheme', 'Scheme'),
    ('puppet', 'puppet', 'Puppet'),
    # ('octave', 'octave', 'Octave'),
    # ('live-script', 'live-script', 'LiveScript'),
    # ('monkey', 'monkey', 'Monkey'),
    # ('red', 'red', 'Red'),
    # ('cfc', 'cfc', 'Coldfusion CFC'),
    # ('d-objdump', 'd-objdump', 'd-objdump'),
    # ('haxeml', 'haxeml', 'Hxml'),
    ('groovy', 'groovy', 'Groovy'),
    ('gradle', 'groovy', 'Gradle'),
    # ('jsonld', 'jsonld', 'JSON-LD'),
    # ('pig', 'pig', 'Pig'),
    # ('cuda', 'cuda', 'CUDA'),
    # ('handlebars', 'handlebars', 'Handlebars'),
    # ('http', 'http', 'HTTP'),
    ('python', 'python', 'Python'),
    # ('boo', 'boo', 'Boo'),
    # ('logtalk', 'logtalk', 'Logtalk'),
    # ('vb.net', 'vb.net', 'VB.net'),
    # ('d', 'd', 'D'),
    # ('blitzbasic', 'blitzbasic', 'BlitzBasic'),
    ('scss', 'scss', 'SCSS'),
    # ('haml', 'haml', 'Haml'),
    # ('foxpro', 'foxpro', 'FoxPro'),
    # ('control', 'control', 'Debian Control file'),
    # ('jade', 'jade', 'Jade'),
    # ('c-objdump', 'c-objdump', 'c-objdump'),
    # ('xml+velocity', 'xml+velocity', 'XML+Velocity'),
    # ('js+cheetah', 'js+cheetah', 'JavaScript+Cheetah'),
    # ('cobol', 'cobol', 'COBOL'),
    # ('objdump', 'objdump', 'objdump'),
    # ('ca65', 'ca65', 'ca65 assembler'),
    # ('sparql', 'sparql', 'SPARQL'),
    # ('lasso', 'lasso', 'Lasso'),
    # ('ragel-java', 'ragel-java', 'Ragel in Java Host'),
    # ('vala', 'vala', 'Vala'),
    # ('haskell', 'haskell', 'Haskell'),
    ('lua', 'lua', 'Lua'),
    # ('aspectj', 'aspectj', 'AspectJ'),
    # ('groff', 'groff', 'Groff'),
    # ('js+lasso', 'js+lasso', 'JavaScript+Lasso'),
    # ('glsl', 'glsl', 'GLSL'),
    # ('gas', 'gas', 'GAS'),
    # ('mxml', 'mxml', 'MXML'),
    # ('xml+cheetah', 'xml+cheetah', 'XML+Cheetah'),
    ('go', 'go', 'Go'),
    # ('pan', 'pan', 'Pan'),
    # ('mql', 'mql', 'MQL'),
    # ('felix', 'felix', 'Felix'),
    # ('properties', 'properties', 'Properties'),
    # ('igor', 'igor', 'Igor'),
    # ('blitzmax', 'blitzmax', 'BlitzMax'),
    ('perl', 'perl', 'Perl'),
    # ('stan', 'stan', 'Stan'),
    ('ini', 'ini', 'INI'),
    # ('rhtml', 'rhtml', 'RHTML'),
    # ('coq', 'coq', 'Coq'),
    # ('tcsh', 'tcsh', 'Tcsh'),
    # ('dpatch', 'dpatch', 'Darcs Patch'),
    # ('twig', 'twig', 'Twig'),
    ('nginx', 'nginx', 'Nginx configuration file'),
    # ('agda', 'agda', 'Agda'),
    # ('applescript', 'applescript', 'AppleScript'),
    # ('html+smarty', 'html+smarty', 'HTML+Smarty'),
    # ('inform7', 'inform7', 'Inform 7'),
    # ('lhs', 'lhs', 'Literate Haskell'),
    ('php', 'php', 'PHP'),
    # ('mscgen', 'mscgen', 'Mscgen'),
    # ('ooc', 'ooc', 'Ooc'),
    # ('sourceslist', 'sourceslist', 'Debian Sourcelist'),
    # ('delphi', 'delphi', 'Delphi'),
    # ('modula2', 'modula2', 'Modula-2'),
    # ('postgresql', 'postgresql', 'PostgreSQL SQL dialect'),
    # ('rexx', 'rexx', 'Rexx'),
    # ('html+django', 'html+django', 'HTML+Django/Jinja'),
    # ('hx', 'hx', 'Haxe'),
    # ('django', 'django', 'Django/Jinja'),
    # ('dtd', 'dtd', 'DTD'),
    # ('nixos', 'nixos', 'Nix'),
    # ('vhdl', 'vhdl', 'vhdl'),
    # ('mask', 'mask', 'Mask'),
    # ('zephir', 'zephir', 'Zephir'),
    # ('pawn', 'pawn', 'Pawn'),
    # ('js+smarty', 'js+smarty', 'JavaScript+Smarty'),
    # ('html+twig', 'html+twig', 'HTML+Twig'),
    # ('fortran', 'fortran', 'Fortran'),
    # ('cryptol', 'cryptol', 'Cryptol'),
    # ('rebol', 'rebol', 'REBOL'),
    ('erb', 'erb', 'ERB'),
    # ('befunge', 'befunge', 'Befunge'),
    # ('moon', 'moon', 'MoonScript'),
    # ('dylan', 'dylan', 'Dylan'),
    # ('trac-wiki', 'trac-wiki', 'MoinMoin/Trac Wiki markup'),
    # ('croc', 'croc', 'Croc'),
    ('html', 'html', 'HTML'),
    ('rst', 'rst', 'reStructuredText'),
    # ('nsis', 'nsis', 'NSIS'),
    # ('elixir', 'elixir', 'Elixir'),
    # ('isabelle', 'isabelle', 'Isabelle'),
    # ('html+myghty', 'html+myghty', 'HTML+Myghty'),
    ('make', 'make', 'Makefile'),
    # ('sqlite3', 'sqlite3', 'sqlite3con'),
    # ('ocaml', 'ocaml', 'OCaml'),
    # ('clay', 'clay', 'Clay'),
    # ('jlcon', 'jlcon', 'Julia console'),
    ('rb', 'rb', 'Ruby'),
    # ('pov', 'pov', 'POVRay'),
    # ('dg', 'dg', 'dg'),
    # ('evoque', 'evoque', 'Evoque'),
    ('docker', 'docker', 'Docker'),
    # ('registry', 'registry', 'reg'),
    # ('html+mako', 'html+mako', 'HTML+Mako'),
    # ('cfengine3', 'cfengine3', 'CFEngine3'),
    # ('mason', 'mason', 'Mason'),
    # ('lean', 'lean', 'Lean'),
    # ('lcry', 'lcry', 'Literate Cryptol'),
    # ('as3', 'as3', 'ActionScript 3'),
    ('kotlin', 'kotlin', 'Kotlin'),
    # ('antlr-java', 'antlr-java', 'ANTLR With Java Target'),
    # ('bugs', 'bugs', 'BUGS'),
    # ('javascript+mozpreproc', 'javascript+mozpreproc', 'Javascript+mozpreproc'),
    # ('yaml+jinja', 'yaml+jinja', 'YAML+Jinja'),
    # ('cpp-objdump', 'cpp-objdump', 'cpp-objdump'),
    # ('bat', 'bat', 'Batchfile'),
    # ('hybris', 'hybris', 'Hybris'),
    # ('opa', 'opa', 'Opa'),
    # ('hylang', 'hylang', 'Hy'),
    # ('cython', 'cython', 'Cython'),
    ('erlang', 'erlang', 'Erlang'),
    # ('vctreestatus', 'vctreestatus', 'VCTreeStatus'),
    ('clojure', 'clojure', 'Clojure'),
    # ('antlr-perl', 'antlr-perl', 'ANTLR With Perl Target'),
    # ('mozhashpreproc', 'mozhashpreproc', 'mozhashpreproc'),
    # ('myghty', 'myghty', 'Myghty'),
    # ('clojurescript', 'clojurescript', 'ClojureScript'),
    # ('qml', 'qml', 'QML'),
    # ('moocode', 'moocode', 'MOOCode'),
    # ('rconsole', 'rconsole', 'RConsole'),
    # ('raw', 'raw', 'Raw token data'),
    # ('html+lasso', 'html+lasso', 'HTML+Lasso'),
    ('csharp', 'csharp', 'C#'),
    # ('tex', 'tex', 'TeX'),
    # ('chai', 'chai', 'ChaiScript'),
    # ('cheetah', 'cheetah', 'Cheetah'),
    # ('smali', 'smali', 'Smali'),
    # ('qbasic', 'qbasic', 'QBasic'),
    # ('gooddata-cl', 'gooddata-cl', 'GoodData-CL'),
    # ('html+handlebars', 'html+handlebars', 'HTML+Handlebars'),
    ('objective-c', 'objective-c', 'Objective-C'),
    # ('lidr', 'lidr', 'Literate Idris'),
    # ('ragel-em', 'ragel-em', 'Embedded Ragel'),
    # ('objdump-nasm', 'objdump-nasm', 'objdump-nasm'),
    # ('antlr-cpp', 'antlr-cpp', 'ANTLR With CPP Target'),
    # ('ebnf', 'ebnf', 'EBNF'),
    # ('gosu', 'gosu', 'Gosu'),
    # ('snobol', 'snobol', 'Snobol'),
    # ('js+php', 'js+php', 'JavaScript+PHP'),
    # ('xquery', 'xquery', 'XQuery'),
    # ('nesc', 'nesc', 'nesC'),
    # ('ecl', 'ecl', 'ECL'),
    # ('ragel-objc', 'ragel-objc', 'Ragel in Objective C Host'),
    # ('xml+django', 'xml+django', 'XML+Django/Jinja'),
    # ('sml', 'sml', 'Standard ML'),
    # ('antlr-ruby', 'antlr-ruby', 'ANTLR With Ruby Target'),
    # ('duel', 'duel', 'Duel'),
    # ('xml+myghty', 'xml+myghty', 'XML+Myghty')
)


def lexer_parser(lexer):
    return {"name": lexer[2], "value": lexer[0]}


def get_lexers():
    lexers = map(lexer_parser, ALL_SUPPORTED_SYNTAX)
    return sorted(lexers, key=itemgetter("name"))


def lexer_dumps(lexer):
    return json.dumps(lexer)


@task
def seed():
    """Seed syntax data in MongoDB"""
    def find_or_create_syntax(key, syntax, name):
        syn = Syntax.objects(key=key).first()
        if syn is None:
            print "Seeding syntax: %s, %s, %s" % (key, syntax, name)
            Syntax(key=key, syntax=syntax, name=name).save()

    for key, syntax, name in ALL_SUPPORTED_SYNTAX:
        find_or_create_syntax(key, syntax, name)

    print "Generating %s" % DIST_FILE
    with open(DIST_FILE, "w") as f:
        lexers = get_lexers()
        lexers_code = ", ".join(map(lexer_dumps, lexers))
        f.write("var lexers = [%s];" % lexers_code)
        print "  %d lexers created." % len(lexers)
